// <auto-generated />
using System;
using LicenseProject.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LicenseProject.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20210417145035_favoritelists")]
    partial class favoritelists
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LicenseProject.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("LicenseProject.Models.FavoriteListRestaurant", b =>
                {
                    b.Property<string>("FavoriteListRestaurantId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("FavoriteListRestaurantId");

                    b.ToTable("FavoriteListRestaurants");
                });

            modelBuilder.Entity("LicenseProject.Models.FavoriteListTuristicObject", b =>
                {
                    b.Property<string>("FavoriteListTuristicObjectId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("FavoriteListTuristicObjectId");

                    b.ToTable("FavoriteListTuristicObjects");
                });

            modelBuilder.Entity("LicenseProject.Models.FavoriteRestaurant", b =>
                {
                    b.Property<int>("FavoriteRestaurantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FavoriteListRestaurantId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("RestaurantId")
                        .HasColumnType("int");

                    b.HasKey("FavoriteRestaurantId");

                    b.HasIndex("FavoriteListRestaurantId");

                    b.HasIndex("RestaurantId");

                    b.ToTable("FavoriteRestaurants");
                });

            modelBuilder.Entity("LicenseProject.Models.FavoriteTuristicObject", b =>
                {
                    b.Property<int>("FavoriteTuristicObjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FavoriteListTuristicObjectId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("TuristicObjectId")
                        .HasColumnType("int");

                    b.HasKey("FavoriteTuristicObjectId");

                    b.HasIndex("FavoriteListTuristicObjectId");

                    b.HasIndex("TuristicObjectId");

                    b.ToTable("FavoriteTuristicObjects");
                });

            modelBuilder.Entity("LicenseProject.Models.Restaurant", b =>
                {
                    b.Property<int>("RestaurantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExactLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MainImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PriceRange")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Program")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelephoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RestaurantId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Restaurants");
                });

            modelBuilder.Entity("LicenseProject.Models.RestaurantCategory", b =>
                {
                    b.Property<int>("RestaurantCId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.HasKey("RestaurantCId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("RestaurantId");

                    b.ToTable("RestaurantsCategories");
                });

            modelBuilder.Entity("LicenseProject.Models.Review", b =>
                {
                    b.Property<int>("ReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Rate")
                        .HasColumnType("int");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.Property<string>("ReviewDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TuristicId")
                        .HasColumnType("int");

                    b.Property<int?>("TuristicObjectId")
                        .HasColumnType("int");

                    b.HasKey("ReviewId");

                    b.HasIndex("RestaurantId");

                    b.HasIndex("TuristicObjectId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("LicenseProject.Models.TuristicObject", b =>
                {
                    b.Property<int>("TuristicObjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExactLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MainImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Program")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelephoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VisitingPrice")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TuristicObjectId");

                    b.HasIndex("CategoryId");

                    b.ToTable("TuristicObjects");
                });

            modelBuilder.Entity("LicenseProject.Models.TuristicObjectCategory", b =>
                {
                    b.Property<int>("TuristicObjectCId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("TuristicObjectId")
                        .HasColumnType("int");

                    b.HasKey("TuristicObjectCId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("TuristicObjectId");

                    b.ToTable("TuristicObjectCategories");
                });

            modelBuilder.Entity("LicenseProject.Models.FavoriteRestaurant", b =>
                {
                    b.HasOne("LicenseProject.Models.FavoriteListRestaurant", null)
                        .WithMany("FavoriteRestaurants")
                        .HasForeignKey("FavoriteListRestaurantId");

                    b.HasOne("LicenseProject.Models.Restaurant", "Restaurant")
                        .WithMany()
                        .HasForeignKey("RestaurantId");

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("LicenseProject.Models.FavoriteTuristicObject", b =>
                {
                    b.HasOne("LicenseProject.Models.FavoriteListTuristicObject", null)
                        .WithMany("FavoriteObjects")
                        .HasForeignKey("FavoriteListTuristicObjectId");

                    b.HasOne("LicenseProject.Models.TuristicObject", "TuristicObject")
                        .WithMany()
                        .HasForeignKey("TuristicObjectId");

                    b.Navigation("TuristicObject");
                });

            modelBuilder.Entity("LicenseProject.Models.Restaurant", b =>
                {
                    b.HasOne("LicenseProject.Models.Category", null)
                        .WithMany("Restaurants")
                        .HasForeignKey("CategoryId");
                });

            modelBuilder.Entity("LicenseProject.Models.RestaurantCategory", b =>
                {
                    b.HasOne("LicenseProject.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LicenseProject.Models.Restaurant", "Restaurant")
                        .WithMany("RestaurantsCategories")
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("LicenseProject.Models.Review", b =>
                {
                    b.HasOne("LicenseProject.Models.Restaurant", "Restaurant")
                        .WithMany("Reviews")
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LicenseProject.Models.TuristicObject", "TuristicObject")
                        .WithMany("Reviews")
                        .HasForeignKey("TuristicObjectId");

                    b.Navigation("Restaurant");

                    b.Navigation("TuristicObject");
                });

            modelBuilder.Entity("LicenseProject.Models.TuristicObject", b =>
                {
                    b.HasOne("LicenseProject.Models.Category", null)
                        .WithMany("TuristicObjects")
                        .HasForeignKey("CategoryId");
                });

            modelBuilder.Entity("LicenseProject.Models.TuristicObjectCategory", b =>
                {
                    b.HasOne("LicenseProject.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LicenseProject.Models.TuristicObject", "TuristicObject")
                        .WithMany("TuristicObjectsCategories")
                        .HasForeignKey("TuristicObjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("TuristicObject");
                });

            modelBuilder.Entity("LicenseProject.Models.Category", b =>
                {
                    b.Navigation("Restaurants");

                    b.Navigation("TuristicObjects");
                });

            modelBuilder.Entity("LicenseProject.Models.FavoriteListRestaurant", b =>
                {
                    b.Navigation("FavoriteRestaurants");
                });

            modelBuilder.Entity("LicenseProject.Models.FavoriteListTuristicObject", b =>
                {
                    b.Navigation("FavoriteObjects");
                });

            modelBuilder.Entity("LicenseProject.Models.Restaurant", b =>
                {
                    b.Navigation("RestaurantsCategories");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("LicenseProject.Models.TuristicObject", b =>
                {
                    b.Navigation("Reviews");

                    b.Navigation("TuristicObjectsCategories");
                });
#pragma warning restore 612, 618
        }
    }
}
